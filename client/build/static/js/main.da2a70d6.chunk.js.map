{"version":3,"sources":["pages/Home.js","App.js","index.js"],"names":["React","require","Home","props","getQuotes","bind","postQuote","deleteQuote","state","quoteList","requestOptions","method","fetch","then","resp","json","row","setState","console","log","JSON","stringify","this","event","preventDefault","refs","author","quote","InputFields","document","getElementById","value","headers","body","id","className","AppBar","position","Toolbar","Typography","variant","width","align","autoComplete","noValidate","onSubmit","TextField","required","label","defaultValue","multiline","rowsMax","type","Button","color","Array","from","map","i","Card","key","CardContent","gutterBottom","Date","timestamp","getTimezoneOffset","toString","paragraph","CardActions","disable-spacing","Favorite","IconButton","onClick","e","DeleteForever","Component","App","exact","path","component","render"],"mappings":"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","file":"static/js/main.da2a70d6.chunk.js","sourcesContent":["import { Button, Card, CardContent, CardActions, Typography, Toolbar, AppBar, TextField, IconButton } from '@material-ui/core'\r\nimport { DeleteForever, Favorite } from '@material-ui/icons'\r\n\r\nvar React = require('react');\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getQuotes = this.getQuotes.bind(this);\r\n    this.postQuote = this.postQuote.bind(this);\r\n    this.deleteQuote = this.deleteQuote.bind(this);\r\n\r\n    this.state = {\r\n      quoteList: [{}],\r\n    };\r\n  }\r\n\r\n  async getQuotes() {\r\n    var requestOptions = {\r\n      method: 'get'\r\n    };\r\n\r\n    await fetch('/api/quotes', requestOptions)\r\n      .then((resp) => resp.json())\r\n      .then((row) => {\r\n        this.setState({ quoteList: row });\r\n      });\r\n\r\n    console.log(\"list of quotes:\" + JSON.stringify(this.state.quoteList));\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.getQuotes();\r\n  }\r\n\r\n  async postQuote(event) {\r\n    event.preventDefault();\r\n\r\n    if (this.refs.author === \"\" || this.refs.quote === \"\") {\r\n      return;\r\n    }\r\n\r\n    var InputFields = {\r\n      author: document.getElementById('author').value,\r\n      quote: document.getElementById('quote').value\r\n    };\r\n\r\n    await fetch('/api/quotes', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(InputFields)\r\n    });\r\n    await this.getQuotes();\r\n\r\n    document.getElementById('author').value = \"\";\r\n    document.getElementById('quote').value = \"\";\r\n  }\r\n\r\n  async deleteQuote(event, id) {\r\n\r\n    //var result = window.confirm(\"Are you sure you want to delete this quote?\");\r\n\r\n    await fetch(`api/quotes/${id}`, {\r\n      method: 'delete'\r\n    });\r\n    await this.getQuotes();\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <AppBar position=\"static\" className=\"AppBar\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\">\r\n              Inspirational Quotes!\r\n          </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td width=\"200\" />\r\n              <td>\r\n                <div align=\"center\" position=\"top\">\r\n                  <form autoComplete=\"off\" noValidate onSubmit={this.postQuote}>\r\n                    <TextField variant=\"outlined\" id=\"author\" required label=\"Author\" defaultValue=\"Bard\" /> <br />\r\n                    <br /><TextField variant=\"outlined\" id=\"quote\" multiline required rowsMax=\"5\" type=\"text\" label=\"Quote\" defaultValue=\"A bear has a long long tail--\" /> <br />\r\n                    <br />\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Add Quote</Button>\r\n                  </form>\r\n                </div>\r\n              </td>\r\n              <td width=\"300\" />\r\n              <td>\r\n                <div align=\"left\">\r\n                  {\r\n                    Array.from(this.state.quoteList).map((quote, i) => {\r\n                      return (\r\n                        <Card variant=\"outlined\" className=\"Card\" key={i}>\r\n                          <CardContent>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\r\n                              Added: {new Date((new Date(quote.timestamp) - new Date(quote.timestamp).getTimezoneOffset() * 60 * 1000)).toString(\"yyyy, MMM dd hh:mm:ss\")}\r\n                            </Typography>\r\n                            <Typography paragraph>\r\n                              {quote.quote}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\">\r\n                              -{quote.author}\r\n                            </Typography>\r\n                            <CardActions disable-spacing=\"true\">\r\n                              <Favorite />\r\n                              <IconButton onClick={(e) => { this.deleteQuote(e, quote.id) }}>\r\n                                <DeleteForever />\r\n                              </IconButton>\r\n                            </CardActions>\r\n                          </CardContent>\r\n                        </Card>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './pages/Home';\n\nclass App extends Component {\n  render() {\n    const App = () => (\n      <div>\n        <Switch>\n          <Route exact path='/' component={Home}/>\n        </Switch>\n      </div>\n    )\n    return (\n      <Switch>\n        <App/>\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nrender((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}